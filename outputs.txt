Lexeme: PROG	Lexical Unit: IDENTIFIER
Lexeme: DECL	Lexical Unit: IDENTIFIER
Lexeme: %1	Lexical Unit: VARIABLE
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: ENTIER	Lexical Unit: TYPE
Lexeme: ,	Lexical Unit: SYMBOL
Lexeme: %2	Lexical Unit: VARIABLE
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: REEL	Lexical Unit: TYPE
Lexeme: DECL	Lexical Unit: IDENTIFIER
Lexeme: CORPS	Lexical Unit: IDENTIFIER
Lexeme: CORPS	Lexical Unit: IDENTIFIER
Lexeme: %1	Lexical Unit: VARIABLE
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: 10	Lexical Unit: INTEGER
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: %2	Lexical Unit: VARIABLE
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: 3.14	Lexical Unit: FLOAT
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: Hello	Lexical Unit: IDENTIFIER
Lexeme: ,	Lexical Unit: SYMBOL
Lexeme: World	Lexical Unit: IDENTIFIER
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: FOR	Lexical Unit: KEYWORD
Lexeme: i	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: 1	Lexical Unit: INTEGER
Lexeme: TO	Lexical Unit: IDENTIFIER
Lexeme: 5	Lexical Unit: INTEGER
Lexeme: DO	Lexical Unit: IDENTIFIER
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: This	Lexical Unit: IDENTIFIER
Lexeme: is	Lexical Unit: IDENTIFIER
Lexeme: loop	Lexical Unit: IDENTIFIER
Lexeme: iteration	Lexical Unit: IDENTIFIER
Lexeme: ,	Lexical Unit: SYMBOL
Lexeme: i	Lexical Unit: IDENTIFIER
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: END_FOR	Lexical Unit: KEYWORD
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: IF	Lexical Unit: KEYWORD
Lexeme: %1	Lexical Unit: VARIABLE
Lexeme: <	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: %2	Lexical Unit: VARIABLE
Lexeme: THEN	Lexical Unit: KEYWORD
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: Variable	Lexical Unit: IDENTIFIER
Lexeme: %1	Lexical Unit: VARIABLE
Lexeme: is	Lexical Unit: IDENTIFIER
Lexeme: less	Lexical Unit: IDENTIFIER
Lexeme: than	Lexical Unit: IDENTIFIER
Lexeme: or	Lexical Unit: IDENTIFIER
Lexeme: equal	Lexical Unit: IDENTIFIER
Lexeme: to	Lexical Unit: IDENTIFIER
Lexeme: %2	Lexical Unit: VARIABLE
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: ELSE	Lexical Unit: IDENTIFIER
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: Variable	Lexical Unit: IDENTIFIER
Lexeme: %1	Lexical Unit: VARIABLE
Lexeme: is	Lexical Unit: IDENTIFIER
Lexeme: greater	Lexical Unit: IDENTIFIER
Lexeme: than	Lexical Unit: IDENTIFIER
Lexeme: %2	Lexical Unit: VARIABLE
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: ENDIF	Lexical Unit: KEYWORD
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: DECLARE	Lexical Unit: IDENTIFIER
Lexeme: str	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: CHAINE	Lexical Unit: TYPE
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: str	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: Hello	Lexical Unit: IDENTIFIER
Lexeme: ,	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: str	Lexical Unit: IDENTIFIER
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: World	Lexical Unit: IDENTIFIER
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: str	Lexical Unit: IDENTIFIER
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: DECLARE	Lexical Unit: IDENTIFIER
Lexeme: table	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: TABLEAU	Lexical Unit: TYPE
Lexeme: 5	Lexical Unit: INTEGER
Lexeme: OF	Lexical Unit: IDENTIFIER
Lexeme: ENTIER	Lexical Unit: TYPE
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: FOR	Lexical Unit: KEYWORD
Lexeme: i	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: 0	Lexical Unit: INTEGER
Lexeme: TO	Lexical Unit: IDENTIFIER
Lexeme: 4	Lexical Unit: INTEGER
Lexeme: DO	Lexical Unit: IDENTIFIER
Lexeme: table	Lexical Unit: IDENTIFIER
Lexeme: i	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: i	Lexical Unit: IDENTIFIER
Lexeme: 2	Lexical Unit: INTEGER
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: END_FOR	Lexical Unit: KEYWORD
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: DECLARE	Lexical Unit: IDENTIFIER
Lexeme: num	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: ENTIER	Lexical Unit: TYPE
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: num	Lexical Unit: IDENTIFIER
Lexeme: :	Lexical Unit: SYMBOL
Lexeme: =	Lexical Unit: RELATIONAL_OPERATOR
Lexeme: table	Lexical Unit: IDENTIFIER
Lexeme: 3	Lexical Unit: INTEGER
Lexeme: ;	Lexical Unit: SYMBOL
Lexeme: ECRIRE	Lexical Unit: KEYWORD
Lexeme: (	Lexical Unit: SYMBOL
Lexeme: The	Lexical Unit: IDENTIFIER
Lexeme: value	Lexical Unit: IDENTIFIER
Lexeme: at	Lexical Unit: IDENTIFIER
Lexeme: index	Lexical Unit: IDENTIFIER
Lexeme: 3	Lexical Unit: INTEGER
Lexeme: in	Lexical Unit: IDENTIFIER
Lexeme: the	Lexical Unit: IDENTIFIER
Lexeme: table	Lexical Unit: IDENTIFIER
Lexeme: is	Lexical Unit: IDENTIFIER
Lexeme: ,	Lexical Unit: SYMBOL
Lexeme: num	Lexical Unit: IDENTIFIER
Lexeme: )	Lexical Unit: SYMBOL
Lexeme: ;	Lexical Unit: SYMBOL
